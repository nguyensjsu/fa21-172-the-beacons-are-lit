{"ast":null,"code":"import * as AT from \"./authTypes\";\nimport axios from \"axios\";\nconst AUTH_URL = \"http://localhost:8080/user/authenticate\";\nexport const authenticateUser = (email, password) => async dispatch => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post(AUTH_URL, {\n      email: email,\n      password: password\n    });\n    localStorage.setItem(\"jwtToken\", response.data.token);\n    dispatch(success({\n      username: response.data.name,\n      isLoggedIn: true\n    }));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(failure());\n    return Promise.reject(error);\n  }\n};\nexport const logoutUser = () => {\n  return dispatch => {\n    dispatch(logoutRequest());\n    localStorage.removeItem(\"jwtToken\");\n    dispatch(success({\n      username: \"\",\n      isLoggedIn: false\n    }));\n  };\n};\n\nconst loginRequest = () => {\n  return {\n    type: AT.LOGIN_REQUEST\n  };\n};\n\nconst logoutRequest = () => {\n  return {\n    type: AT.LOGOUT_REQUEST\n  };\n};\n\nconst success = isLoggedIn => {\n  return {\n    type: AT.SUCCESS,\n    payload: isLoggedIn\n  };\n};\n\nconst failure = () => {\n  return {\n    type: AT.FAILURE,\n    payload: false\n  };\n};","map":{"version":3,"sources":["C:/Users/reren/Documents/School/Fall 2021/CMPE 172/fa21-172-the-beacons-are-lit/philz-api-db/src/main/webapp/reactjs/src/services/user/auth/authActions.js"],"names":["AT","axios","AUTH_URL","authenticateUser","email","password","dispatch","loginRequest","response","post","localStorage","setItem","data","token","success","username","name","isLoggedIn","Promise","resolve","error","failure","reject","logoutUser","logoutRequest","removeItem","type","LOGIN_REQUEST","LOGOUT_REQUEST","SUCCESS","payload","FAILURE"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,yCAAjB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACvEA,EAAAA,QAAQ,CAACC,YAAY,EAAb,CAAR;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWP,QAAX,EAAqB;AAC1CE,MAAAA,KAAK,EAAEA,KADmC;AAE1CC,MAAAA,QAAQ,EAAEA;AAFgC,KAArB,CAAvB;AAIAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,QAAQ,CAACI,IAAT,CAAcC,KAA/C;AACAP,IAAAA,QAAQ,CAACQ,OAAO,CAAC;AAAEC,MAAAA,QAAQ,EAAEP,QAAQ,CAACI,IAAT,CAAcI,IAA1B;AAAgCC,MAAAA,UAAU,EAAE;AAA5C,KAAD,CAAR,CAAR;AACA,WAAOC,OAAO,CAACC,OAAR,CAAgBX,QAAQ,CAACI,IAAzB,CAAP;AACD,GARD,CAQE,OAAOQ,KAAP,EAAc;AACdd,IAAAA,QAAQ,CAACe,OAAO,EAAR,CAAR;AACA,WAAOH,OAAO,CAACI,MAAR,CAAeF,KAAf,CAAP;AACD;AACF,CAdM;AAgBP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC9B,SAAQjB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACkB,aAAa,EAAd,CAAR;AACAd,IAAAA,YAAY,CAACe,UAAb,CAAwB,UAAxB;AACAnB,IAAAA,QAAQ,CAACQ,OAAO,CAAC;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBE,MAAAA,UAAU,EAAE;AAA5B,KAAD,CAAR,CAAR;AACD,GAJD;AAKD,CANM;;AAQP,MAAMV,YAAY,GAAG,MAAM;AACzB,SAAO;AACLmB,IAAAA,IAAI,EAAE1B,EAAE,CAAC2B;AADJ,GAAP;AAGD,CAJD;;AAMA,MAAMH,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLE,IAAAA,IAAI,EAAE1B,EAAE,CAAC4B;AADJ,GAAP;AAGD,CAJD;;AAMA,MAAMd,OAAO,GAAIG,UAAD,IAAgB;AAC9B,SAAO;AACLS,IAAAA,IAAI,EAAE1B,EAAE,CAAC6B,OADJ;AAELC,IAAAA,OAAO,EAAEb;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMI,OAAO,GAAG,MAAM;AACpB,SAAO;AACLK,IAAAA,IAAI,EAAE1B,EAAE,CAAC+B,OADJ;AAELD,IAAAA,OAAO,EAAE;AAFJ,GAAP;AAID,CALD","sourcesContent":["import * as AT from \"./authTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst AUTH_URL = \"http://localhost:8080/user/authenticate\";\r\n\r\nexport const authenticateUser = (email, password) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const response = await axios.post(AUTH_URL, {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    localStorage.setItem(\"jwtToken\", response.data.token);\r\n    dispatch(success({ username: response.data.name, isLoggedIn: true }));\r\n    return Promise.resolve(response.data);\r\n  } catch (error) {\r\n    dispatch(failure());\r\n    return Promise.reject(error);\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch(logoutRequest());\r\n    localStorage.removeItem(\"jwtToken\");\r\n    dispatch(success({ username: \"\", isLoggedIn: false }));\r\n  };\r\n};\r\n\r\nconst loginRequest = () => {\r\n  return {\r\n    type: AT.LOGIN_REQUEST,\r\n  };\r\n};\r\n\r\nconst logoutRequest = () => {\r\n  return {\r\n    type: AT.LOGOUT_REQUEST,\r\n  };\r\n};\r\n\r\nconst success = (isLoggedIn) => {\r\n  return {\r\n    type: AT.SUCCESS,\r\n    payload: isLoggedIn,\r\n  };\r\n};\r\n\r\nconst failure = () => {\r\n  return {\r\n    type: AT.FAILURE,\r\n    payload: false,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}