{"ast":null,"code":"import * as UT from \"./userTypes\";\nimport axios from \"axios\";\nconst REGISTER_URL = \"http://localhost:8080/api/user/register\";\nexport const fetchUsers = () => {\n  return dispatch => {\n    dispatch(userRequest());\n    axios.get(\"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\").then(response => {\n      dispatch(userSuccess(response.data));\n    }).catch(error => {\n      dispatch(userFailure(error.message));\n    });\n  };\n};\nexport const registerUser = userObject => async dispatch => {\n  dispatch(userRequest());\n\n  try {\n    const response = await axios.post(REGISTER_URL, userObject);\n    dispatch(userSavedSuccess(response.data));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(userFailure(error.message));\n    return Promise.reject(error);\n  }\n};\n\nconst userRequest = () => {\n  return {\n    type: UT.USER_REQUEST\n  };\n};\n\nconst userSavedSuccess = user => {\n  return {\n    type: UT.USER_SAVED_SUCCESS,\n    payload: user\n  };\n};\n\nconst userSuccess = users => {\n  return {\n    type: UT.USER_SUCCESS,\n    payload: users\n  };\n};\n\nconst userFailure = error => {\n  return {\n    type: UT.USER_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/services/user/userActions.js"],"names":["UT","axios","REGISTER_URL","fetchUsers","dispatch","userRequest","get","then","response","userSuccess","data","catch","error","userFailure","message","registerUser","userObject","post","userSavedSuccess","Promise","resolve","reject","type","USER_REQUEST","user","USER_SAVED_SUCCESS","payload","users","USER_SUCCESS","USER_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,aAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG,yCAArB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;AACAJ,IAAAA,KAAK,CACFK,GADH,CAEI,yEAFJ,EAIGC,IAJH,CAISC,QAAD,IAAc;AAClBJ,MAAAA,QAAQ,CAACK,WAAW,CAACD,QAAQ,CAACE,IAAV,CAAZ,CAAR;AACD,KANH,EAOGC,KAPH,CAOUC,KAAD,IAAW;AAChBR,MAAAA,QAAQ,CAACS,WAAW,CAACD,KAAK,CAACE,OAAP,CAAZ,CAAR;AACD,KATH;AAUD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAIC,UAAD,IAAgB,MAAOZ,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAACC,WAAW,EAAZ,CAAR;;AACA,MAAI;AACF,UAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAN,CAAWf,YAAX,EAAyBc,UAAzB,CAAvB;AACAZ,IAAAA,QAAQ,CAACc,gBAAgB,CAACV,QAAQ,CAACE,IAAV,CAAjB,CAAR;AACA,WAAOS,OAAO,CAACC,OAAR,CAAgBZ,QAAQ,CAACE,IAAzB,CAAP;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAACS,WAAW,CAACD,KAAK,CAACE,OAAP,CAAZ,CAAR;AACA,WAAOK,OAAO,CAACE,MAAR,CAAeT,KAAf,CAAP;AACD;AACF,CAVM;;AAYP,MAAMP,WAAW,GAAG,MAAM;AACxB,SAAO;AACLiB,IAAAA,IAAI,EAAEtB,EAAE,CAACuB;AADJ,GAAP;AAGD,CAJD;;AAMA,MAAML,gBAAgB,GAAIM,IAAD,IAAU;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEtB,EAAE,CAACyB,kBADJ;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMf,WAAW,GAAIkB,KAAD,IAAW;AAC7B,SAAO;AACLL,IAAAA,IAAI,EAAEtB,EAAE,CAAC4B,YADJ;AAELF,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMd,WAAW,GAAID,KAAD,IAAW;AAC7B,SAAO;AACLU,IAAAA,IAAI,EAAEtB,EAAE,CAAC6B,YADJ;AAELH,IAAAA,OAAO,EAAEd;AAFJ,GAAP;AAID,CALD","sourcesContent":["import * as UT from \"./userTypes\";\nimport axios from \"axios\";\n\nconst REGISTER_URL = \"http://localhost:8080/api/user/register\";\n\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    dispatch(userRequest());\n    axios\n      .get(\n        \"https://randomapi.com/api/6de6abfedb24f889e0b5f675edc50deb?fmt=raw&sole\"\n      )\n      .then((response) => {\n        dispatch(userSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(userFailure(error.message));\n      });\n  };\n};\n\nexport const registerUser = (userObject) => async (dispatch) => {\n  dispatch(userRequest());\n  try {\n    const response = await axios.post(REGISTER_URL, userObject);\n    dispatch(userSavedSuccess(response.data));\n    return Promise.resolve(response.data);\n  } catch (error) {\n    dispatch(userFailure(error.message));\n    return Promise.reject(error);\n  }\n};\n\nconst userRequest = () => {\n  return {\n    type: UT.USER_REQUEST,\n  };\n};\n\nconst userSavedSuccess = (user) => {\n  return {\n    type: UT.USER_SAVED_SUCCESS,\n    payload: user,\n  };\n};\n\nconst userSuccess = (users) => {\n  return {\n    type: UT.USER_SUCCESS,\n    payload: users,\n  };\n};\n\nconst userFailure = (error) => {\n  return {\n    type: UT.USER_FAILURE,\n    payload: error,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}