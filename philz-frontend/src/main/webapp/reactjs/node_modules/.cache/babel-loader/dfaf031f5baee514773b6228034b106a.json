{"ast":null,"code":"var _jsxFileName = \"/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/components/Product/Product.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { saveBook, fetchBook, updateBook, fetchLanguages, fetchGenres } from \"../../services/index\";\nimport { Card, Form, Button, Col, InputGroup, Image } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPlusSquare, faUndo, faList, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport MyToast from \"../MyToast\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      id: \"\",\n      name: \"\",\n      roast: \"\",\n      price: \"\",\n      isbnNumber: \"\",\n      price: \"\",\n      language: \"\",\n      genre: \"\"\n    };\n\n    this.findAllLanguages = () => {\n      this.props.fetchLanguages();\n      setTimeout(() => {\n        let bookLanguages = this.props.bookObject.languages;\n\n        if (bookLanguages) {\n          this.setState({\n            languages: [{\n              value: \"\",\n              display: \"Select Language\"\n            }].concat(bookLanguages.map(language => {\n              return {\n                value: language,\n                display: language\n              };\n            }))\n          });\n          this.findAllGenres();\n        }\n      }, 100);\n    };\n\n    this.findAllGenres = () => {\n      this.props.fetchGenres();\n      setTimeout(() => {\n        let bookGenres = this.props.bookObject.genres;\n\n        if (bookGenres) {\n          this.setState({\n            genres: [{\n              value: \"\",\n              display: \"Select Genre\"\n            }].concat(bookGenres.map(genre => {\n              return {\n                value: genre,\n                display: genre\n              };\n            }))\n          });\n        }\n      }, 100);\n    };\n\n    this.findBookById = bookId => {\n      this.props.fetchBook(bookId);\n      setTimeout(() => {\n        let book = this.props.bookObject.book;\n\n        if (book != null) {\n          this.setState({\n            id: book.id,\n            title: book.title,\n            author: book.author,\n            coverPhotoURL: book.coverPhotoURL,\n            isbnNumber: book.isbnNumber,\n            price: book.price,\n            language: book.language,\n            genre: book.genre\n          });\n        }\n      }, 1000);\n    };\n\n    this.resetBook = () => {\n      this.setState(() => this.initialState);\n    };\n\n    this.submitBook = event => {\n      event.preventDefault();\n      const book = {\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoURL,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language,\n        genre: this.state.genre\n      };\n      this.props.saveBook(book);\n      setTimeout(() => {\n        if (this.props.bookObject.book != null) {\n          this.setState({\n            show: true,\n            method: \"post\"\n          });\n          setTimeout(() => this.setState({\n            show: false\n          }), 3000);\n        } else {\n          this.setState({\n            show: false\n          });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n\n    this.updateBook = event => {\n      event.preventDefault();\n      const book = {\n        id: this.state.id,\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoURL,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language,\n        genre: this.state.genre\n      };\n      this.props.updateBook(book);\n      setTimeout(() => {\n        if (this.props.bookObject.book != null) {\n          this.setState({\n            show: true,\n            method: \"put\"\n          });\n          setTimeout(() => this.setState({\n            show: false\n          }), 3000);\n        } else {\n          this.setState({\n            show: false\n          });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n\n    this.bookChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const bookId = +this.props.match.params.id;\n\n    if (bookId) {\n      this.findBookById(bookId);\n    }\n\n    this.findAllLanguages();\n  }\n\n  render() {\n    const _this$state = this.state,\n          title = _this$state.title,\n          author = _this$state.author,\n          coverPhotoURL = _this$state.coverPhotoURL,\n          isbnNumber = _this$state.isbnNumber,\n          price = _this$state.price,\n          language = _this$state.language,\n          genre = _this$state.genre;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: this.state.show ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(MyToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Book Updated Successfully.\" : \"Book Saved Successfully.\",\n      type: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update Book\" : \"Add New Book\"), React.createElement(Form, {\n      onReset: this.resetBook,\n      onSubmit: this.state.id ? this.updateBook : this.submitBook,\n      id: \"bookFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"title\",\n      value: title,\n      onChange: this.bookChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Book Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Author\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"author\",\n      value: author,\n      onChange: this.bookChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Book Author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridCoverPhotoURL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Cover Photo URL\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"coverPhotoURL\",\n      value: coverPhotoURL,\n      onChange: this.bookChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Book Cover Photo URL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(InputGroup.Append, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, this.state.coverPhotoURL !== \"\" && React.createElement(Image, {\n      src: this.state.coverPhotoURL,\n      roundedRight: true,\n      width: \"40\",\n      height: \"38\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridISBNNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"ISBN Number\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"isbnNumber\",\n      value: isbnNumber,\n      onChange: this.bookChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Book ISBN Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Price\"), React.createElement(Form.Control, {\n      required: true,\n      autoComplete: \"off\",\n      type: \"test\",\n      name: \"price\",\n      value: price,\n      onChange: this.bookChange,\n      className: \"bg-dark text-white\",\n      placeholder: \"Enter Book Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridLanguage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Language\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      custom: true,\n      onChange: this.bookChange,\n      name: \"language\",\n      value: language,\n      className: \"bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.languages.map(language => React.createElement(\"option\", {\n      key: language.value,\n      value: language.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, language.display)))), React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      custom: true,\n      onChange: this.bookChange,\n      name: \"genre\",\n      value: genre,\n      className: \"bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, this.state.genres.map(genre => React.createElement(\"option\", {\n      key: genre.value,\n      value: genre.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, genre.display)))))), React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), \" Reset\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"button\",\n      onClick: () => this.bookList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), \" Book List\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bookObject: state.book\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveBook: book => dispatch(saveBook(book)),\n    fetchBook: bookId => dispatch(fetchBook(bookId)),\n    updateBook: book => dispatch(updateBook(book)),\n    fetchLanguages: () => dispatch(fetchLanguages()),\n    fetchGenres: () => dispatch(fetchGenres())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","map":{"version":3,"sources":["/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/components/Product/Product.js"],"names":["React","Component","connect","saveBook","fetchBook","updateBook","fetchLanguages","fetchGenres","Card","Form","Button","Col","InputGroup","Image","FontAwesomeIcon","faSave","faPlusSquare","faUndo","faList","faEdit","MyToast","Product","constructor","props","initialState","id","name","roast","price","isbnNumber","language","genre","findAllLanguages","setTimeout","bookLanguages","bookObject","languages","setState","value","display","concat","map","findAllGenres","bookGenres","genres","findBookById","bookId","book","title","author","coverPhotoURL","resetBook","submitBook","event","preventDefault","state","show","method","bookChange","target","bookList","history","push","componentDidMount","match","params","render","textAlign","mapStateToProps","mapDispatchToProps","dispatch","Book"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  saveBook,\n  fetchBook,\n  updateBook,\n  fetchLanguages,\n  fetchGenres,\n} from \"../../services/index\";\n\nimport { Card, Form, Button, Col, InputGroup, Image } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSave,\n  faPlusSquare,\n  faUndo,\n  faList,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MyToast from \"../MyToast\";\n\nclass Product extends Component {\n    constructor(props) {\n      super(props);\n      this.state = this.initialState;\n    }\n  \n    initialState = {\n      id: \"\",\n      name: \"\",\n      roast: \"\",\n      price: \"\",\n      isbnNumber: \"\",\n      price: \"\",\n      language: \"\",\n      genre: \"\",\n    };\n  \n    componentDidMount() {\n      const bookId = +this.props.match.params.id;\n      if (bookId) {\n        this.findBookById(bookId);\n      }\n      this.findAllLanguages();\n    }\n  \n    findAllLanguages = () => {\n      this.props.fetchLanguages();\n      setTimeout(() => {\n        let bookLanguages = this.props.bookObject.languages;\n        if (bookLanguages) {\n          this.setState({\n            languages: [{ value: \"\", display: \"Select Language\" }].concat(\n              bookLanguages.map((language) => {\n                return { value: language, display: language };\n              })\n            ),\n          });\n          this.findAllGenres();\n        }\n      }, 100);\n    };\n  \n    findAllGenres = () => {\n      this.props.fetchGenres();\n      setTimeout(() => {\n        let bookGenres = this.props.bookObject.genres;\n        if (bookGenres) {\n          this.setState({\n            genres: [{ value: \"\", display: \"Select Genre\" }].concat(\n              bookGenres.map((genre) => {\n                return { value: genre, display: genre };\n              })\n            ),\n          });\n        }\n      }, 100);\n    };\n  \n    findBookById = (bookId) => {\n      this.props.fetchBook(bookId);\n      setTimeout(() => {\n        let book = this.props.bookObject.book;\n        if (book != null) {\n          this.setState({\n            id: book.id,\n            title: book.title,\n            author: book.author,\n            coverPhotoURL: book.coverPhotoURL,\n            isbnNumber: book.isbnNumber,\n            price: book.price,\n            language: book.language,\n            genre: book.genre,\n          });\n        }\n      }, 1000);\n    };\n  \n    resetBook = () => {\n      this.setState(() => this.initialState);\n    };\n  \n    submitBook = (event) => {\n      event.preventDefault();\n  \n      const book = {\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoURL,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language,\n        genre: this.state.genre,\n      };\n  \n      this.props.saveBook(book);\n      setTimeout(() => {\n        if (this.props.bookObject.book != null) {\n          this.setState({ show: true, method: \"post\" });\n          setTimeout(() => this.setState({ show: false }), 3000);\n        } else {\n          this.setState({ show: false });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n  \n    updateBook = (event) => {\n      event.preventDefault();\n  \n      const book = {\n        id: this.state.id,\n        title: this.state.title,\n        author: this.state.author,\n        coverPhotoURL: this.state.coverPhotoURL,\n        isbnNumber: this.state.isbnNumber,\n        price: this.state.price,\n        language: this.state.language,\n        genre: this.state.genre,\n      };\n      this.props.updateBook(book);\n      setTimeout(() => {\n        if (this.props.bookObject.book != null) {\n          this.setState({ show: true, method: \"put\" });\n          setTimeout(() => this.setState({ show: false }), 3000);\n        } else {\n          this.setState({ show: false });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n  \n    bookChange = (event) => {\n      this.setState({\n        [event.target.name]: event.target.value,\n      });\n    };\n  \n    bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n  \n    render() {\n      const { title, author, coverPhotoURL, isbnNumber, price, language, genre } =\n        this.state;\n  \n      return (\n        <div>\n          <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\n            <MyToast\n              show={this.state.show}\n              message={\n                this.state.method === \"put\"\n                  ? \"Book Updated Successfully.\"\n                  : \"Book Saved Successfully.\"\n              }\n              type={\"success\"}\n            />\n          </div>\n          <Card className={\"border border-dark bg-dark text-white\"}>\n            <Card.Header>\n              <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />{\" \"}\n              {this.state.id ? \"Update Book\" : \"Add New Book\"}\n            </Card.Header>\n            <Form\n              onReset={this.resetBook}\n              onSubmit={this.state.id ? this.updateBook : this.submitBook}\n              id=\"bookFormId\"\n            >\n              <Card.Body>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridTitle\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                      required\n                      autoComplete=\"off\"\n                      type=\"test\"\n                      name=\"title\"\n                      value={title}\n                      onChange={this.bookChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Book Title\"\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridAuthor\">\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control\n                      required\n                      autoComplete=\"off\"\n                      type=\"test\"\n                      name=\"author\"\n                      value={author}\n                      onChange={this.bookChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Book Author\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCoverPhotoURL\">\n                    <Form.Label>Cover Photo URL</Form.Label>\n                    <InputGroup>\n                      <Form.Control\n                        required\n                        autoComplete=\"off\"\n                        type=\"test\"\n                        name=\"coverPhotoURL\"\n                        value={coverPhotoURL}\n                        onChange={this.bookChange}\n                        className={\"bg-dark text-white\"}\n                        placeholder=\"Enter Book Cover Photo URL\"\n                      />\n                      <InputGroup.Append>\n                        {this.state.coverPhotoURL !== \"\" && (\n                          <Image\n                            src={this.state.coverPhotoURL}\n                            roundedRight\n                            width=\"40\"\n                            height=\"38\"\n                          />\n                        )}\n                      </InputGroup.Append>\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridISBNNumber\">\n                    <Form.Label>ISBN Number</Form.Label>\n                    <Form.Control\n                      required\n                      autoComplete=\"off\"\n                      type=\"test\"\n                      name=\"isbnNumber\"\n                      value={isbnNumber}\n                      onChange={this.bookChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Book ISBN Number\"\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridPrice\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control\n                      required\n                      autoComplete=\"off\"\n                      type=\"test\"\n                      name=\"price\"\n                      value={price}\n                      onChange={this.bookChange}\n                      className={\"bg-dark text-white\"}\n                      placeholder=\"Enter Book Price\"\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridLanguage\">\n                    <Form.Label>Language</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      custom\n                      onChange={this.bookChange}\n                      name=\"language\"\n                      value={language}\n                      className={\"bg-dark text-white\"}\n                    >\n                      {this.state.languages.map((language) => (\n                        <option key={language.value} value={language.value}>\n                          {language.display}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"formGridGenre\">\n                    <Form.Label>Genre</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      custom\n                      onChange={this.bookChange}\n                      name=\"genre\"\n                      value={genre}\n                      className={\"bg-dark text-white\"}\n                    >\n                      {this.state.genres.map((genre) => (\n                        <option key={genre.value} value={genre.value}>\n                          {genre.display}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n              </Card.Body>\n              <Card.Footer style={{ textAlign: \"right\" }}>\n                <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                  <FontAwesomeIcon icon={faSave} />{\" \"}\n                  {this.state.id ? \"Update\" : \"Save\"}\n                </Button>{\" \"}\n                <Button size=\"sm\" variant=\"info\" type=\"reset\">\n                  <FontAwesomeIcon icon={faUndo} /> Reset\n                </Button>{\" \"}\n                <Button\n                  size=\"sm\"\n                  variant=\"info\"\n                  type=\"button\"\n                  onClick={() => this.bookList()}\n                >\n                  <FontAwesomeIcon icon={faList} /> Book List\n                </Button>\n              </Card.Footer>\n            </Form>\n          </Card>\n        </div>\n      );\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      bookObject: state.book,\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      saveBook: (book) => dispatch(saveBook(book)),\n      fetchBook: (bookId) => dispatch(fetchBook(bookId)),\n      updateBook: (book) => dispatch(updateBook(book)),\n      fetchLanguages: () => dispatch(fetchLanguages()),\n      fetchGenres: () => dispatch(fetchGenres()),\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Book);\n  "]},"metadata":{},"sourceType":"module"}