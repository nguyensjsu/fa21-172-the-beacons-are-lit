{"ast":null,"code":"var _jsxFileName = \"/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/components/Product/Product.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { saveBook, fetchBook, updateBook, fetchLanguages, fetchGenres } from \"../../services/index\";\nimport { Card, Form, Button, Col, InputGroup, Image } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSave, faPlusSquare, faUndo, faList, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport MyToast from \"../MyToast\";\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.initialState = {\n      userid: \"\",\n      id: \"\",\n      name: \"\",\n      roast: \"\",\n      price: \"\"\n    };\n\n    this.submitProduct = event => {\n      event.preventDefault();\n      const product = {\n        name: this.state.name,\n        roast: this.state.roast,\n        price: this.state.price\n      };\n      this.props.saveProduct(userid, product);\n      setTimeout(() => {\n        if (this.props.productObject.product != null) {\n          this.setState({\n            show: true,\n            method: \"post\"\n          });\n          setTimeout(() => this.setState({\n            show: false\n          }), 3000);\n        } else {\n          this.setState({\n            show: false\n          });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n\n    this.bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    const productId = +this.props.match.params.id;\n\n    if (productId) {\n      this.findBookById(bookId);\n    }\n\n    this.findAllLanguages();\n  }\n\n  render() {\n    const _this$state = this.state,\n          userid = _this$state.userid,\n          name = _this$state.name,\n          roast = _this$state.roast,\n          price = _this$state.price;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: this.state.show ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MyToast, {\n      show: this.state.show,\n      message: this.state.method === \"put\" ? \"Book Updated Successfully.\" : \"Book Saved Successfully.\",\n      type: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Card, {\n      className: \"border border-dark bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: this.state.id ? faEdit : faPlusSquare,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update Book\" : \"Add New Book\"), React.createElement(Form, {\n      onReset: this.resetBook,\n      onSubmit: this.state.id ? this.updateBook : this.submitBook,\n      id: \"bookFormId\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(Form.Control, {\n      required: true,\n      as: \"select\",\n      custom: true,\n      onChange: this.bookChange,\n      name: \"genre\",\n      value: genre,\n      className: \"bg-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.genres.map(genre => React.createElement(\"option\", {\n      key: genre.value,\n      value: genre.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, genre.display)))))), React.createElement(Card.Footer, {\n      style: {\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      variant: \"success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), \" \", this.state.id ? \"Update\" : \"Save\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"reset\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faUndo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), \" Reset\"), \" \", React.createElement(Button, {\n      size: \"sm\",\n      variant: \"info\",\n      type: \"button\",\n      onClick: () => this.bookList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), \" Book List\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    bookObject: state.book\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveBook: book => dispatch(saveBook(book)),\n    fetchBook: bookId => dispatch(fetchBook(bookId)),\n    updateBook: book => dispatch(updateBook(book)),\n    fetchLanguages: () => dispatch(fetchLanguages()),\n    fetchGenres: () => dispatch(fetchGenres())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","map":{"version":3,"sources":["/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/components/Product/Product.js"],"names":["React","Component","connect","saveBook","fetchBook","updateBook","fetchLanguages","fetchGenres","Card","Form","Button","Col","InputGroup","Image","FontAwesomeIcon","faSave","faPlusSquare","faUndo","faList","faEdit","MyToast","Product","constructor","props","initialState","userid","id","name","roast","price","submitProduct","event","preventDefault","product","state","saveProduct","setTimeout","productObject","setState","show","method","bookList","history","push","componentDidMount","productId","match","params","findBookById","bookId","findAllLanguages","render","display","resetBook","submitBook","bookChange","genre","genres","map","value","textAlign","mapStateToProps","bookObject","book","mapDispatchToProps","dispatch","Book"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport {\n  saveBook,\n  fetchBook,\n  updateBook,\n  fetchLanguages,\n  fetchGenres,\n} from \"../../services/index\";\n\nimport { Card, Form, Button, Col, InputGroup, Image } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faSave,\n  faPlusSquare,\n  faUndo,\n  faList,\n  faEdit,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport MyToast from \"../MyToast\";\n\nclass Product extends Component {\n    constructor(props) {\n      super(props);\n      this.state = this.initialState;\n    }\n  \n    initialState = {\n        userid : \"\",\n        id: \"\",\n        name: \"\",\n        roast: \"\",\n        price: \"\",\n    };\n  \n    componentDidMount() {\n      const productId = +this.props.match.params.id;\n      if (productId) {\n        this.findBookById(bookId);\n      }\n      this.findAllLanguages();\n    }\n  \n    submitProduct = (event) => {\n      event.preventDefault();\n  \n      const product = {\n        name: this.state.name,\n        roast: this.state.roast,\n        price: this.state.price,\n      };\n  \n      this.props.saveProduct(userid, product);\n      setTimeout(() => {\n        if (this.props.productObject.product != null) {\n          this.setState({ show: true, method: \"post\" });\n          setTimeout(() => this.setState({ show: false }), 3000);\n        } else {\n          this.setState({ show: false });\n        }\n      }, 2000);\n      this.setState(this.initialState);\n    };\n  \n    \n  \n    bookList = () => {\n      return this.props.history.push(\"/list\");\n    };\n  \n    render() {\n      const { userid, name, roast, price} =\n        this.state;\n  \n      return (\n        <div>\n          <div style={{ display: this.state.show ? \"block\" : \"none\" }}>\n            <MyToast\n              show={this.state.show}\n              message={\n                this.state.method === \"put\"\n                  ? \"Book Updated Successfully.\"\n                  : \"Book Saved Successfully.\"\n              }\n              type={\"success\"}\n            />\n          </div>\n          <Card className={\"border border-dark bg-dark text-white\"}>\n            <Card.Header>\n              <FontAwesomeIcon icon={this.state.id ? faEdit : faPlusSquare} />{\" \"}\n              {this.state.id ? \"Update Book\" : \"Add New Book\"}\n            </Card.Header>\n            <Form\n              onReset={this.resetBook}\n              onSubmit={this.state.id ? this.updateBook : this.submitBook}\n              id=\"bookFormId\"\n            >\n              <Card.Body>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridGenre\">\n                    <Form.Label>Genre</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      custom\n                      onChange={this.bookChange}\n                      name=\"genre\"\n                      value={genre}\n                      className={\"bg-dark text-white\"}\n                    >\n                      {this.state.genres.map((genre) => (\n                        <option key={genre.value} value={genre.value}>\n                          {genre.display}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n              </Card.Body>\n              <Card.Footer style={{ textAlign: \"right\" }}>\n                <Button size=\"sm\" variant=\"success\" type=\"submit\">\n                  <FontAwesomeIcon icon={faSave} />{\" \"}\n                  {this.state.id ? \"Update\" : \"Save\"}\n                </Button>{\" \"}\n                <Button size=\"sm\" variant=\"info\" type=\"reset\">\n                  <FontAwesomeIcon icon={faUndo} /> Reset\n                </Button>{\" \"}\n                <Button\n                  size=\"sm\"\n                  variant=\"info\"\n                  type=\"button\"\n                  onClick={() => this.bookList()}\n                >\n                  <FontAwesomeIcon icon={faList} /> Book List\n                </Button>\n              </Card.Footer>\n            </Form>\n          </Card>\n        </div>\n      );\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    return {\n      bookObject: state.book,\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      saveBook: (book) => dispatch(saveBook(book)),\n      fetchBook: (bookId) => dispatch(fetchBook(bookId)),\n      updateBook: (book) => dispatch(updateBook(book)),\n      fetchLanguages: () => dispatch(fetchLanguages()),\n      fetchGenres: () => dispatch(fetchGenres()),\n    };\n  };\n  \n  export default connect(mapStateToProps, mapDispatchToProps)(Book);\n  "]},"metadata":{},"sourceType":"module"}