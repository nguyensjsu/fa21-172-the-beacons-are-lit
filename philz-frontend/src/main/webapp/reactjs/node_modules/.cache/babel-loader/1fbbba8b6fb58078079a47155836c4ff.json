{"ast":null,"code":"import _defineProperty from \"/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE } from \"./authTypes\";\nconst initialState = {\n  username: \"\",\n  isLoggedIn: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case LOGOUT_REQUEST:\n      return _objectSpread({}, state);\n\n    case SUCCESS:\n    case FAILURE:\n      return {\n        username: action.payload.username,\n        userId: response.data.userId,\n        isLoggedIn: action.payload.isLoggedIn\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/services/user/auth/authReducer.js"],"names":["LOGIN_REQUEST","LOGOUT_REQUEST","SUCCESS","FAILURE","initialState","username","isLoggedIn","reducer","state","action","type","payload","userId","response","data"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,cAAxB,EAAwCC,OAAxC,EAAiDC,OAAjD,QAAgE,aAAhE;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,aAAL;AACA,SAAKC,cAAL;AACE,+BACKO,KADL;;AAGF,SAAKN,OAAL;AACA,SAAKC,OAAL;AACE,aAAO;AACLE,QAAAA,QAAQ,EAAEI,MAAM,CAACE,OAAP,CAAeN,QADpB;AAELO,QAAAA,MAAM,EAAEC,QAAQ,CAACC,IAAT,CAAcF,MAFjB;AAGLN,QAAAA,UAAU,EAAEG,MAAM,CAACE,OAAP,CAAeL;AAHtB,OAAP;;AAKF;AACE,aAAOE,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,OAAf","sourcesContent":["import { LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE } from \"./authTypes\";\n\nconst initialState = {\n  username: \"\",\n  isLoggedIn: \"\",\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n      };\n    case SUCCESS:\n    case FAILURE:\n      return {\n        username: action.payload.username,\n        userId: response.data.userId,\n        isLoggedIn: action.payload.isLoggedIn,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}