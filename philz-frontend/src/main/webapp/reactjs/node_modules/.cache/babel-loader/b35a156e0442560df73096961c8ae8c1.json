{"ast":null,"code":"import * as BT from \"./productTypes\";\nimport axios from \"axios\"; //\n\nexport const fetchProduct = () => {\n  return dispatch => {\n    dispatch({\n      type: BT.FETCH_PRODUCT_REQUEST\n    });\n    axios.get(\"http://localhost:8081/rest/api/products\").then(response => {\n      dispatch(productSuccess(response.data));\n    }).catch(error => {\n      dispatch(productFailure(error));\n    });\n  };\n};\n\nconst productSuccess = product => {\n  return {\n    type: BT.PRODUCT_SUCCESS,\n    payload: product\n  };\n};\n\nconst productFailure = error => {\n  return {\n    type: BT.PRODUCT_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["/Users/annluu/fa21-172-the-beacons-are-lit/philz-frontend/src/main/webapp/reactjs/src/services/product/productActions.js"],"names":["BT","axios","fetchProduct","dispatch","type","FETCH_PRODUCT_REQUEST","get","then","response","productSuccess","data","catch","error","productFailure","product","PRODUCT_SUCCESS","payload","PRODUCT_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,EAAZ,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,EAAE,CAACK;AADF,KAAD,CAAR;AAGAJ,IAAAA,KAAK,CACFK,GADH,CACO,yCADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBL,MAAAA,QAAQ,CAACM,cAAc,CAACD,QAAQ,CAACE,IAAV,CAAf,CAAR;AACD,KAJH,EAKGC,KALH,CAKUC,KAAD,IAAW;AAChBT,MAAAA,QAAQ,CAACU,cAAc,CAACD,KAAD,CAAf,CAAR;AACD,KAPH;AAQD,GAZD;AAaD,CAdM;;AAgBP,MAAMH,cAAc,GAAIK,OAAD,IAAa;AAClC,SAAO;AACLV,IAAAA,IAAI,EAAEJ,EAAE,CAACe,eADJ;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,MAAMD,cAAc,GAAID,KAAD,IAAW;AAChC,SAAO;AACLR,IAAAA,IAAI,EAAEJ,EAAE,CAACiB,eADJ;AAELD,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALD","sourcesContent":["import * as BT from \"./productTypes\";\nimport axios from \"axios\";\n\n//\nexport const fetchProduct = () => {\n  return (dispatch) => {\n    dispatch({\n      type: BT.FETCH_PRODUCT_REQUEST,\n    });\n    axios\n      .get(\"http://localhost:8081/rest/api/products\")\n      .then((response) => {\n        dispatch(productSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(productFailure(error));\n      });\n  };\n};\n\nconst productSuccess = (product) => {\n  return {\n    type: BT.PRODUCT_SUCCESS,\n    payload: product,\n  };\n};\n\nconst productFailure = (error) => {\n  return {\n    type: BT.PRODUCT_FAILURE,\n    payload: error,\n  };\n};"]},"metadata":{},"sourceType":"module"}